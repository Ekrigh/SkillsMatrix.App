@* @typeparam TModel
<h3>FilterMenu</h3>

<MudPopover Open="@_filterOpen" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
    <div class="m-2">

        <h3>Filter Matrix</h3>

        <MudToggleGroup T="int" SelectionMode="SelectionMode.MultiSelection" @bind-Values="_ratings">
            <MudToggleItem Value="1" />
            <MudToggleItem Value="2" />
            <MudToggleItem Value="3" />
            <MudToggleItem Value="4" />
            <MudToggleItem Value="5" />
            <MudToggleItem Value="6" />
        </MudToggleGroup>

        @foreach (var column in Grid.RenderedColumns)
        {
            <MudCheckBox T="bool" Label="@column.Title" Value="@(column.Visible)" @onchange="(e) => ToggleColumnVisibility(column, e.Value)" />
        }
        <MudStack Row="true">
            <MudButton OnClick="@(() => ClearFilterAsync(context))">Clear</MudButton>
            <MudButton Color="@Color.Primary" OnClick="@(() => ApplyFilterAsync(context))">Filter</MudButton>
        </MudStack>
    </div>
</MudPopover>

@code {
    [Parameter]
    public MudDataGrid<TModel> Grid { get; set; }
    private IEnumerable<int> _ratings;
    bool _filterOpen = true;

    private void ToggleColumnVisibility(MudDataGridColumn<TModel> column, bool isVisible)
    {
        column.Visible = isVisible;
        Grid.Refresh(); // Refresh the grid to reflect the changes
    }

    private async Task ClearFilterAsync(FilterContext<Element> context)
    {
        _selectedItems = Elements.ToHashSet();
        _filterItems = Elements.ToHashSet();
        _icon = Icons.Material.Outlined.FilterAlt;
        await context.Actions.ClearFilterAsync(_filterDefinition);
        _filterOpen = false;
    }

    private string getColor(int rating)
    {
        string style = "font-weight:bold; text-align:center";
        switch (rating)
        {
            case 1:
                style += ";background-color:#E94B41CC";
                break;
            case 2:
                style += ";background-color:#F28724CC";
                break;
            case 3:
                style += ";background-color:#F2C024CC";
                break;
            case 4:
                style += ";background-color:#D1E329CC";
                break;
            case 5:
                style += ";background-color:#9CD751CC";
                break;
            case 6:
                style += ";background-color:#75C13CCC";
                break;
            default:
                style += ";background-color:#FCFCFC";
                break;
        }
        return style;
    }

}
 *@