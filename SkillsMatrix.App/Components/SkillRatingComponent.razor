@rendermode InteractiveServer
@using SkillsMatrix.Infrastructure.Models
@using SkillsMatrix.Infrastructure.Services.UserSkillRatingService
@using SkillsMatrix.Infrastructure.Services.UserService
@inject IUserSkillRatingService UserSkillRatingService
@inject IUserSkillRatingService UserService


@if(UserSkillRating == null) 
{
    <p>Loading...</p>
} 
else 
{
    <div>
        <h5>@Skill.Name</h5>
        <label>Current Rating:</label>
        <MudRating @bind-SelectedValue="UserSkillRating.Rating" MaxValue="6" />
        <label>Desired Rating:</label>
        <MudRating @bind-SelectedValue="UserSkillRating.DesiredRating" MaxValue="6"/>
    </div>
}

@code {
    [Parameter]
    public Skill Skill { get; set; }

    [Parameter]
    public UserSkillRating UserSkillRating { get; set; }

    [Parameter]
    public EventCallback<UserSkillRating> OnUserSkillRatingChanged { get; set; }

    private async Task OnRatingChanged()
    {
        await OnUserSkillRatingChanged.InvokeAsync(UserSkillRating);
    }
}