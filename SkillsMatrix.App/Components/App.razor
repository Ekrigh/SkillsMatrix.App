@using Microsoft.AspNetCore.Components.Authorization

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="SkillsMatrix.App.styles.css" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <link href="bl-stepper.css" rel="stylesheet"/>
    <HeadOutlet />
</head>
<body>
    <CascadingAuthenticationState>
        <Routes />
    </CascadingAuthenticationState>
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
</body>
</html>


@code {
    [Inject] private AuthenticationStateProvider GetAuthenticationStateAsync { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await SetPermissions();
        await base.OnInitializedAsync();
    }

    private async Task SetPermissions()
    {
        var authenticationState = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();

        if (authenticationState != null)
        {
            var userId = authenticationState.GetUserId();
            //var rechten = await GraphSecurityAttributesService.GetCustomSecurityAttributes(gebruikerId);
        }

    }
}